# This is an Enaml file that enables us to integrate psivideo into
# psiexperiment. Enaml is not required to use psivideo independently of
# psiexperiment.
import logging
log = logging.getLogger(__name__)

import atexit
from functools import partial
from pathlib import Path
import shutil
import tempfile

from atom.api import Bool, Int, Str, Typed
from enaml.core.api import d_
from enaml.workbench.api import Extension
from enaml.workbench.core.api import Command

from psi.context.api import Result
from psi.controller.api import ExperimentAction
from psi.core.enaml.api import ExperimentManifest, PSIManifest
from psi.data.api import Sink

from psivideo.client import SyncVideoClient


class VideoSink(Sink):

    client = Typed(SyncVideoClient)
    base_path = Typed(Path)
    is_temp = Bool(False)
    port = d_(Int())
    filename = d_(Str('recording.avi'))

    def _default_client(self):
        return SyncVideoClient(port=self.port)

    def set_base_path(self, base_path, is_temp):
        if not is_temp:
            base_path = str(base_path).replace('d:', 'e:')
            base_path = Path(base_path)
            base_path.mkdir(parents=True, exist_ok=True)
        self.base_path = base_path
        self.is_temp = is_temp

    def start_client(self):
        self.client.connect()
        atexit.register(self.client.disconnect)

    def start_recording(self):
        self.client.start(self.base_path / self.filename)

    def stop_recording(self):
        try:
            self.client.stop()
        except Exception as e:
            log.exception(e)

    def get_timing(self):
        return self.client.get_timing()


def get_timing(client, event):
    info = client.get_timing()
    context = event.workbench.get_plugin('psi.context')
    context.set_value(f'{client.name}_frames_written', info['frame_number'])
    context.set_value(f'{client.name}_frame_ts', info['timestamp'])


enamldef VideoSinkManifest(PSIManifest): manifest:

    Extension:
        id = manifest.contribution.name + '.commands'
        point = 'enaml.workbench.core.commands'
        Command:
            id = manifest.contribution.name + '.start_client'
            handler = lambda e: manifest.contribution.start_client()
        Command:
            id = manifest.contribution.name + '.start_recording'
            handler = lambda e: manifest.contribution.start_recording()
        Command:
            id = manifest.contribution.name + '.stop_recording'
            handler = lambda e: manifest.contribution.stop_recording()
        Command:
            id = manifest.contribution.name + '.get_timing'
            handler = partial(get_timing, manifest.contribution)


enamldef PSIVideo(ExperimentManifest): manifest:

    id = 'psivideo'
    title = 'PSIVideo'
    attr port = 33331
    #: This should just be a filename. The base path to the experiment folder
    #: will be appended to this. Any attempt to define a full path will likely
    #: generate an error or put the file somewhere strange.
    attr filename = 'recording.avi'

    Extension:
        id = manifest.id + '.sinks'
        point = 'psi.data.sinks'

        VideoSink:
            name = manifest.id
            port = manifest.port
            filename = manifest.filename

    Extension:
        id = manifest.id + '.actions'
        point = 'psi.controller.actions'
        ExperimentAction:
            event = 'plugins_started'
            command = manifest.id + '.start_client'
        ExperimentAction:
            event = 'experiment_prepare'
            command = manifest.id + '.start_recording'
        ExperimentAction:
            event = 'experiment_end'
            command = manifest.id + '.stop_recording'
        ExperimentAction:
            event = 'trial_start'
            command = manifest.id + '.get_timing'

    Extension:
        id = manifest.id + '.parameters'
        point = 'psi.context.items'

        Result:
            name = manifest.id + '_frames_written'
            label = manifest.title + ' frames written'
            compact_label = 'Frames'
            group_name = 'results'

        Result:
            name = manifest.id + '_frame_ts'
            label = manifest.title + ' frame timestamp'
            compact_label = 'Video TS'
            group_name = 'results'
